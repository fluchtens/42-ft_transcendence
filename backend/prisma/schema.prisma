generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int    @id @default(autoincrement())
  username   String @unique @db.VarChar(255)
  fortyTwoId Int?   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password String? @db.VarChar(255)
  twoFa    Boolean @default(false)

  merbers  Member[]
  channels Channel[]
}

model Channel {
id       String    @id @default(uuid())
name     String
inviteCode String   @db.Text()
password String?   @db.VarChar(255)

userId   Int
user     User      @relation(fields: [userId], references: [id],  onDelete: Cascade)
messages Message[]
members Member[]

CreatedAt DateTime @default(now())
updatedAt DateTime @updatedAt

@@index([userId])
}

model Message{

  id    String @id @default(uuid())
  content String @db.Text()

  channelId String
  channels Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  CreatedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([channelId])
}

model Member{
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  channelId String
  channel Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  CreatedAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([channelId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}