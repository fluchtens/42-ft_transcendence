version: "3"

services:
  postgres:
    container_name: transcendence-postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - transcendence
    restart: always

  backend:
    container_name: transcendence-backend
    image: transcendence-backend
    build:
      context: ./backend
      dockerfile: prod.Dockerfile
    depends_on:
      - postgres
    environment:
      VITE_BACK_URL: ${VITE_BACK_URL}
      VITE_FRONT_URL: ${VITE_FRONT_URL}
      VITE_BACK_PORT: ${VITE_BACK_PORT}
      JWT_SECRET: ${JWT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
      FORTY_TWO_UID: ${FORTY_TWO_UID}
      FORTY_TWO_SECRET: ${FORTY_TWO_SECRET}
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - 3000:3000
      - 5555:5555
    volumes:
      - uploads:/app/uploads
      # - /etc/letsencrypt/live/pong.fluchtens.com/fullchain.pem:/app/fullchain.pem
      # - /etc/letsencrypt/live/pong.fluchtens.com/privkey.pem:/app/privkey.pem
      # - ./backend:/app
      # - /app/node_modules
    networks:
      - transcendence
    restart: always

  frontend:
    container_name: transcendence-frontend
    image: transcendence-frontend
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
      args:
        - VITE_BACK_URL=${VITE_BACK_URL}
    depends_on:
      - backend
    environment:
      VITE_BACK_URL: ${VITE_BACK_URL}
    ports:
      - 80:80
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    networks:
      - transcendence
    restart: always

networks:
  transcendence:
    name: transcendence

volumes:
  database:
  uploads:
